// 42. 숫자값 리터럴
// 타입이 있는 리터럴을 지정할 수 있다.
// 100이라고 쓰고 8비트 정수 100으로 지정하고 싶다면 => '100u8'
// -> 숫자값 리터럴 뒤에 타입읅 ㅣ술해 숫자값의 타입을 지정할 수 있다.

// 정수 리터럴에는 숫자값의 단위를 구분하기 위해 언더바(_)를 넣을 수도 있다. 1만을 표현하기 위해 '10000' 또는
// '10_000'이라고 쓸 수 있으며 동일한 값을 갖는다.
use std::any::type_name;

// 타입 확인을 위한 함수 정의
fn type_of<T>(_: T) -> &'static str {
    type_name::<T>()
}

fn main(){
    let a = 100u8;      // u8 타입 100
    let b = 100i128;    // i128 타입 100
    let c = 10_000;     // 10000과 동일한 의미
    println!("각 타입 확인 : a={}({}), b={}({}), c={}({})", a, type_of(a), b, type_of(b), c, type_of(c));
}